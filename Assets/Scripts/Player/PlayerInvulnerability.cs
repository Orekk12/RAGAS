#undef DEBUG
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerInvulnerability2 : MonoBehaviour
{
    [Header("- - - References - - -")]

    [SerializeField] gameState StateScript;

    [Header("- - - Variables - - -")]

    [SerializeField] int firstLayer = 8;
    [SerializeField] int secondLayer = 11;
    [SerializeField] float sec = 2;
    [SerializeField] bool ifIgnored; //test

    [SerializeField] float flashDuration;
    [SerializeField] Color flashColor;
    [SerializeField] Color regularColor;


    public IEnumerator setIgnoreCollisionOfLayers(bool flag)
    {
#if (DEBUG)
        Debug.Log("PlayerSkills: " + (gameObject) + "is invincible");
#endif
        Physics2D.IgnoreLayerCollision(firstLayer, secondLayer, true);
        ifIgnored = true;
        if (flag)
            yield return new WaitForSeconds(0.1f);
        StartCoroutine(FlashOnHit());
        yield return new WaitForSeconds(sec);
#if (DEBUG)
        Debug.Log("PlayerSkills: waited " + sec + "seconds");
        Debug.Log("PlayerSkills: " + (gameObject) + "is vulnerable");
#endif
        Physics2D.IgnoreLayerCollision(firstLayer, secondLayer, false);
        ifIgnored = false;
        //StateScript.gotHit = false;
    }

    public void setInvincibility()
    {
        StartCoroutine(setIgnoreCollisionOfLayers(true));
    }

    private IEnumerator FlashOnHit()
    {
        while (ifIgnored)
        {
#if (DEBUG)
            Debug.Log("PlayerSkills: " + (gameObject) + "is flashing");
#endif
            gameObject.GetComponent<SpriteRenderer>().color = flashColor;
            yield return new WaitForSeconds(flashDuration);
            gameObject.GetComponent<SpriteRenderer>().color = regularColor;
            yield return new WaitForSeconds(flashDuration);
        }
    }

    public void setIgnoreCollisionOfLayers_TrueorFalse(bool flag)
    {
#if (DEBUG && flag==true)
        Debug.Log("PlayerSkills: " + (gameObject) + "is invincible");
#endif
        Physics2D.IgnoreLayerCollision(firstLayer, secondLayer, flag);
#if (DEBUG && flag==false)
        Debug.Log("PlayerSkills: " + (gameObject) + "is vulnerable");
#endif
    }
}
